apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: kubernetes-service-template
  title: Kubernetes Service Template
  description: Create a Kubernetes service with configurable service types and ports
  tags:
    - kubernetes
    - service
    - networking
    - golden-path
spec:
  owner: user:guest
  type: service

  parameters:
    - title: Basic Information
      required:
        - name
        - namespace
        - targetApp
      properties:
        name:
          title: Service Name
          type: string
          description: Name of the service
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          ui:autofocus: true
        namespace:
          title: Kubernetes Namespace
          type: string
          description: Target namespace for the service
          default: default
          enum:
            - default
            - production
            - staging
            - development
        targetApp:
          title: Target Application
          type: string
          description: Name of the app this service will route to (selector label)

    - title: Service Configuration
      required:
        - serviceType
        - port
        - targetPort
      properties:
        serviceType:
          title: Service Type
          type: string
          description: Type of Kubernetes service
          default: ClusterIP
          enum:
            - ClusterIP
            - NodePort
            - LoadBalancer
            - ExternalName
          enumNames:
            - 'ClusterIP (Internal cluster access only)'
            - 'NodePort (External access via node IP:port)'
            - 'LoadBalancer (External load balancer)'
            - 'ExternalName (Maps to external DNS)'
        port:
          title: Service Port
          type: integer
          description: Port that the service exposes
          default: 80
          minimum: 1
          maximum: 65535
        targetPort:
          title: Target Port
          type: integer
          description: Port on the target pods
          default: 8080
          minimum: 1
          maximum: 65535
        protocol:
          title: Protocol
          type: string
          description: Network protocol
          default: TCP
          enum:
            - TCP
            - UDP
            - SCTP

    - title: Advanced Settings
      properties:
        nodePort:
          title: Node Port
          type: integer
          description: Specific node port (only for NodePort type, 30000-32767)
          minimum: 30000
          maximum: 32767
        sessionAffinity:
          title: Session Affinity
          type: string
          description: Session affinity type
          default: None
          enum:
            - None
            - ClientIP
        backstageId:
          title: Backstage Kubernetes ID
          type: string
          description: ID for Backstage to track this service
          default: cluster-viewer

    - title: Repository Location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    # Fetch the template content
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          namespace: ${{ parameters.namespace }}
          targetApp: ${{ parameters.targetApp }}
          serviceType: ${{ parameters.serviceType }}
          port: ${{ parameters.port }}
          targetPort: ${{ parameters.targetPort }}
          protocol: ${{ parameters.protocol }}
          nodePort: ${{ parameters.nodePort }}
          sessionAffinity: ${{ parameters.sessionAffinity }}
          backstageId: ${{ parameters.backstageId }}

    # Publish to GitHub
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        description: Kubernetes service for ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        gitCommitMessage: 'Initial commit: Add ${{ parameters.name }} service'

    # Register in catalog
    - id: register
      name: Register in Catalog
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in Catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
      - title: View Service
        icon: dashboard
        url: ${{ steps['publish'].output.remoteUrl }}/blob/main/k8s/service.yaml