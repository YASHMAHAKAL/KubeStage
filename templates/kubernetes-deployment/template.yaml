apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: kubernetes-deployment-template
  title: Kubernetes Deployment Template
  description: Create a standard Kubernetes deployment with configurable parameters
  tags:
    - kubernetes
    - deployment
    - golden-path
spec:
  owner: user:guest
  type: service

  parameters:
    - title: Basic Information
      required:
        - name
        - namespace
      properties:
        name:
          title: Application Name
          type: string
          description: Name of your application (will be used for deployment and labels)
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          ui:autofocus: true
          ui:help: 'Must be lowercase alphanumeric with hyphens'
        namespace:
          title: Kubernetes Namespace
          type: string
          description: Target namespace for the deployment
          default: default
          enum:
            - default
            - production
            - staging
            - development

    - title: Container Configuration
      required:
        - image
        - containerPort
      properties:
        image:
          title: Container Image
          type: string
          description: Docker image to deploy
          default: nginx:latest
          examples:
            - nginx:latest
            - alpine:latest
            - redis:7
        containerPort:
          title: Container Port
          type: integer
          description: Port that the container exposes
          default: 80
          minimum: 1
          maximum: 65535

    - title: Deployment Settings
      required:
        - replicas
      properties:
        replicas:
          title: Number of Replicas
          type: integer
          description: Number of pod replicas to run
          default: 2
          minimum: 1
          maximum: 10
        cpuRequest:
          title: CPU Request
          type: string
          description: CPU resource request
          default: 100m
          examples:
            - 100m
            - 250m
            - 500m
        memoryRequest:
          title: Memory Request
          type: string
          description: Memory resource request
          default: 128Mi
          examples:
            - 64Mi
            - 128Mi
            - 256Mi
            - 512Mi
        cpuLimit:
          title: CPU Limit
          type: string
          description: CPU resource limit
          default: 500m
          examples:
            - 250m
            - 500m
            - 1
        memoryLimit:
          title: Memory Limit
          type: string
          description: Memory resource limit
          default: 256Mi
          examples:
            - 128Mi
            - 256Mi
            - 512Mi
            - 1Gi

    - title: Labels and Annotations
      properties:
        environment:
          title: Environment
          type: string
          description: Environment label for the deployment
          default: development
          enum:
            - development
            - staging
            - production
        version:
          title: Version
          type: string
          description: Version label for the deployment
          default: 1.0.0
        backstageId:
          title: Backstage Kubernetes ID
          type: string
          description: ID for Backstage to track this deployment
          default: cluster-viewer

    - title: Repository Configuration
      required:
        - repoUrl
        - targetPath
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
          description: Select existing repository or create new one
        targetPath:
          title: Target Path in Repository
          type: string
          description: Path where files will be created (e.g., deployments/my-app)
          default: deployments/${{ parameters.name }}
          ui:help: Files will be created in this directory within the repository
        createPullRequest:
          title: Create Pull Request
          type: boolean
          description: Create a pull request instead of pushing directly to main branch
          default: true
          ui:help: Recommended for existing repositories to review changes

  steps:
    # Fetch the template content
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          namespace: ${{ parameters.namespace }}
          image: ${{ parameters.image }}
          containerPort: ${{ parameters.containerPort }}
          replicas: ${{ parameters.replicas }}
          cpuRequest: ${{ parameters.cpuRequest }}
          memoryRequest: ${{ parameters.memoryRequest }}
          cpuLimit: ${{ parameters.cpuLimit }}
          memoryLimit: ${{ parameters.memoryLimit }}
          environment: ${{ parameters.environment }}
          version: ${{ parameters.version }}
          backstageId: ${{ parameters.backstageId }}

    # Publish to GitHub (conditional based on PR setting)
    - id: publish
      name: Publish to GitHub
      if: ${{ not parameters.createPullRequest }}
      action: publish:github
      input:
        description: Kubernetes deployment for ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        targetPath: ${{ parameters.targetPath }}
        gitCommitMessage: 'Add ${{ parameters.name }} deployment to ${{ parameters.targetPath }}'
        gitAuthorName: 'Backstage Scaffolder'
        gitAuthorEmail: 'scaffolder@backstage.io'

    # Create Pull Request for existing repositories
    - id: publish-pr
      name: Create Pull Request
      if: ${{ parameters.createPullRequest }}
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        targetPath: ${{ parameters.targetPath }}
        title: 'Add ${{ parameters.name }} Kubernetes deployment'
        description: |
          ## üöÄ New Kubernetes Deployment: ${{ parameters.name }}
          
          This PR adds a new Kubernetes deployment configuration for **${{ parameters.name }}**.
          
          ### üìã Deployment Details:
          - **Name:** ${{ parameters.name }}
          - **Namespace:** ${{ parameters.namespace }}
          - **Image:** ${{ parameters.image }}
          - **Replicas:** ${{ parameters.replicas }}
          - **Environment:** ${{ parameters.environment }}
          
          ### üìÅ Files Added:
          - `${{ parameters.targetPath }}/catalog-info.yaml` - Backstage catalog configuration
          - `${{ parameters.targetPath }}/k8s/deployment.yaml` - Kubernetes deployment manifest
          - `${{ parameters.targetPath }}/README.md` - Project documentation
          
          ### üöÄ To Deploy:
          ```bash
          kubectl apply -f ${{ parameters.targetPath }}/k8s/deployment.yaml
          ```
        branchName: feature/add-${{ parameters.name }}-deployment

    # Register in catalog (for direct push)
    - id: register
      name: Register in Catalog
      if: ${{ not parameters.createPullRequest }}
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/${{ parameters.targetPath }}/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ (parameters.createPullRequest and steps['publish-pr'].output.remoteUrl) or steps['publish'].output.remoteUrl }}
        icon: github
      - title: Pull Request
        url: ${{ steps['publish-pr'].output.pullRequestUrl }}
        icon: pullRequest
        if: ${{ parameters.createPullRequest }}
      - title: Open in Catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
        if: ${{ not parameters.createPullRequest }}
      - title: View Deployment
        icon: dashboard
        url: ${{ (parameters.createPullRequest and steps['publish-pr'].output.remoteUrl) or steps['publish'].output.remoteUrl }}/blob/main/${{ parameters.targetPath }}/k8s/deployment.yaml
    text:
      - title: Deployment Published Successfully
        content: |
          üéâ **Deployment configuration published!**
          
          Your Kubernetes deployment **${{ parameters.name }}** has been ${{ parameters.createPullRequest and "submitted as a pull request" or "pushed to the repository" }}.
          
          üìÅ **Files created in:** `${{ parameters.targetPath }}/`
          - `catalog-info.yaml` - Backstage catalog configuration
          - `k8s/deployment.yaml` - Kubernetes deployment manifest  
          - `README.md` - Project documentation
          
          ÔøΩ **Next Steps:**
          ${{ parameters.createPullRequest and "1. **Review and merge** the pull request above" or "1. **Files are ready** in the repository" }}
          2. **Deploy manually** using the kubectl commands below
          
          üöÄ **To deploy:**
          ```bash
          # Navigate to the deployment directory
          cd ${{ parameters.targetPath }}
          
          # Apply the deployment
          kubectl apply -f k8s/deployment.yaml
          
          # Check status  
          kubectl get deployments -n ${{ parameters.namespace }} -l app=${{ parameters.name }}
          kubectl get pods -n ${{ parameters.namespace }} -l app=${{ parameters.name }}
          ```